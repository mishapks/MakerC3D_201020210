package org.compi2.codigo3d.parser;

import java_cup.runtime.Symbol;

//PARSER PARA EL ARCHIVO DE ESCENARIOS
parser code
{://Codigo visible

    public void syntax_error(Symbol s){
        System.err.println(s);
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.err.println("T.T");
        System.err.println(s);
    }

:}

action code
{://Codigo de acciones
      
:}

terminal String ID, ENTERO, DECIMAL;
terminal TokenC3D MAS, MENOS, MULT, DIV, POT, PAR_IZQ, PAR_DER;
terminal IGUALIGUAL, DIFERENTE,MAYORQ ,MENORQ,MAYORIGUALQ, MENORIGUALQ;
terminal AND,OR,NOT;             
nonterminal NodoC3D inicial, expresion;

precedence left OR;
precedence left AND;
precedence right NOT;
precedence left IGUALIGUAL, DIFERENTE, MAYORQ, MENORQ, MAYORIGUALQ, MENORIGUALQ;
precedence left MAS, MENOS;
precedence left MULT, DIV; 
precedence right POT;

start with inicial;

inicial     ::= {: ControlC3D.reiniciar(); :} expresion:exp 
                    {: 
                        RESULT = exp;
                        ControlC3D.agregarC3D("etqV->" + exp.getEtqV()+":" + "\n etqF-> "+exp.getEtqF()+":");
                        System.out.println("Verdadera: " + exp.getEtqV() + "\n Falsa: "+exp.getEtqF());
                        
                    :};

expresion   ::= expresion:izq MAS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " + " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MENOS expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " - " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq MULT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " * " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq DIV expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " / " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   expresion:izq POT expresion:der
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = " + izq.getCad() + " ^ " + der.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}

//-----------------------------------AND--------------------------------
            |   expresion:izq AND {: 
                                    String c3d = izq.getEtqV()+":" + "\n";
                                    ControlC3D.agregarC3D(c3d);
                                    //RESULT = new NodoC3D(c3d); 
                                  :}
                    expresion:der
                    {: 
                        String c3d = izq.getEtqF() + ":"+ der.getEtqF();
                        RESULT = new NodoC3D(c3d,der.getEtqV(),c3d);
                    :}

//-----------------------------------OR---------------------------------
            |   expresion:izq OR {: 
                                    String c3d = izq.getEtqF()+":" + "\n";
                                    ControlC3D.agregarC3D(c3d);
                                    RESULT = new NodoC3D(c3d); 
                                 :} 
                    expresion:der
                    {: 
                        String c3d = izq.getEtqV() + ":"+ der.getEtqV();
                        RESULT = new NodoC3D(c3d,c3d,der.getEtqF()); 
                    :}
//-----------------------------------NOT---------------------------------
            |   NOT expresion:der
                    {: 
                        RESULT = new NodoC3D("",der.getEtqF(),der.getEtqV());
                    :}

//----------------------------RELACIONALES------------------------------
            |   expresion:izq IGUALIGUAL expresion:der
                    {: 
                        String verdadero = ControlC3D.generaEtiqueta();
                        String falso = ControlC3D.generaEtiqueta();
                        String c3d = " if " + izq.getCad() + " == " + der.getCad() + " goto " + verdadero + "\n";
                        c3d = c3d +"    " +" goto " + falso + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(c3d,verdadero,falso);
                    :}
            |   expresion:izq DIFERENTE expresion:der
                    {: 
                        
                        String verdadero = ControlC3D.generaEtiqueta();
                        String falso = ControlC3D.generaEtiqueta();
                        String c3d = " if " + izq.getCad() + " != " + der.getCad() + " goto " + verdadero + "\n";
                        c3d = c3d +"    " +" goto " + falso + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(c3d,verdadero,falso);
                    :}
            |   expresion:izq MAYORQ expresion:der
                    {: 
                          
                        String verdadero = ControlC3D.generaEtiqueta();
                        String falso = ControlC3D.generaEtiqueta();
                        String c3d = " if " + izq.getCad() + " > " + der.getCad() + " goto " + verdadero + "\n";
                        c3d = c3d +"    " +" goto " + falso + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(c3d,verdadero,falso);  
                    :}
            |   expresion:izq MENORQ expresion:der
                    {: 
                        
                        String verdadero = ControlC3D.generaEtiqueta();
                        String falso = ControlC3D.generaEtiqueta();
                        String c3d = " if " + izq.getCad() + " < " + der.getCad() + " goto " + verdadero + "\n";
                        c3d = c3d +"    " +" goto " + falso + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(c3d,verdadero,falso);  
                        System.out.println("falsitas:"+falso + "verdaderitas:"+verdadero);  
                    :}
            |   expresion:izq MAYORIGUALQ expresion:der
                    {: 
                        
                        String verdadero = ControlC3D.generaEtiqueta();
                        String falso = ControlC3D.generaEtiqueta();
                        String c3d = " if " + izq.getCad() + " >= " + der.getCad() + " goto " + verdadero + "\n";
                        c3d = c3d +"    " +" goto " + falso + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(c3d,verdadero,falso);  
                    :}
            |   expresion:izq MENORIGUALQ expresion:der
                    {: 
                        String verdadero = ControlC3D.generaEtiqueta();
                        String falso = ControlC3D.generaEtiqueta();
                        String c3d = " if " + izq.getCad() + " <= " + der.getCad() + " goto " + verdadero + "\n";
                        c3d = c3d +"    " +" goto " + falso + "\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(c3d,verdadero,falso); 
                        
                    :}
           
            |   MENOS expresion:exp 
                    {: 
                        String temp = ControlC3D.generaTemp();
                        String c3d = temp + " = - " + exp.getCad() + ";\n";
                        ControlC3D.agregarC3D(c3d);
                        RESULT = new NodoC3D(temp); 
                    :}
            |   PAR_IZQ expresion:exp PAR_DER   
                    {: RESULT = exp; :}
            |   ID:id           
                    {: RESULT = new NodoC3D(id); :}
            |   ENTERO:entero   
                    {: RESULT = new NodoC3D(entero); :}
            |   DECIMAL:decimal 
                    {: RESULT = new NodoC3D(decimal); :}
            ;